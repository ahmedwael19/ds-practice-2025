# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import transaction_verification_pb2 as transaction__verification__pb2


class TransactionServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitializeTransaction = channel.unary_unary(
                '/transaction.TransactionService/InitializeTransaction',
                request_serializer=transaction__verification__pb2.InitRequest.SerializeToString,
                response_deserializer=transaction__verification__pb2.EventResponse.FromString,
                )
        self.VerifyItems = channel.unary_unary(
                '/transaction.TransactionService/VerifyItems',
                request_serializer=transaction__verification__pb2.EventRequest.SerializeToString,
                response_deserializer=transaction__verification__pb2.EventResponse.FromString,
                )
        self.VerifyUserData = channel.unary_unary(
                '/transaction.TransactionService/VerifyUserData',
                request_serializer=transaction__verification__pb2.EventRequest.SerializeToString,
                response_deserializer=transaction__verification__pb2.EventResponse.FromString,
                )
        self.VerifyCreditCardFormat = channel.unary_unary(
                '/transaction.TransactionService/VerifyCreditCardFormat',
                request_serializer=transaction__verification__pb2.EventRequest.SerializeToString,
                response_deserializer=transaction__verification__pb2.EventResponse.FromString,
                )
        self.ClearTransactionCache = channel.unary_unary(
                '/transaction.TransactionService/ClearTransactionCache',
                request_serializer=transaction__verification__pb2.ClearCacheRequest.SerializeToString,
                response_deserializer=transaction__verification__pb2.ClearCacheResponse.FromString,
                )
        self.VerifyTransaction = channel.unary_unary(
                '/transaction.TransactionService/VerifyTransaction',
                request_serializer=transaction__verification__pb2.TransactionRequest.SerializeToString,
                response_deserializer=transaction__verification__pb2.TransactionResponse.FromString,
                )


class TransactionServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def InitializeTransaction(self, request, context):
        """Initial call to cache data and start the flow for this service
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyItems(self, request, context):
        """Event a: Verify items are not empty
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyUserData(self, request, context):
        """Event b: Verify user data fields are present (basic check)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyCreditCardFormat(self, request, context):
        """Event c: Verify credit card format
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearTransactionCache(self, request, context):
        """Bonus: Clear cache for a specific order
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyTransaction(self, request, context):
        """Keep original VerifyTransaction for now, maybe deprecate later
        Or repurpose it if needed, but the new event methods are preferred
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TransactionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InitializeTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.InitializeTransaction,
                    request_deserializer=transaction__verification__pb2.InitRequest.FromString,
                    response_serializer=transaction__verification__pb2.EventResponse.SerializeToString,
            ),
            'VerifyItems': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyItems,
                    request_deserializer=transaction__verification__pb2.EventRequest.FromString,
                    response_serializer=transaction__verification__pb2.EventResponse.SerializeToString,
            ),
            'VerifyUserData': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyUserData,
                    request_deserializer=transaction__verification__pb2.EventRequest.FromString,
                    response_serializer=transaction__verification__pb2.EventResponse.SerializeToString,
            ),
            'VerifyCreditCardFormat': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyCreditCardFormat,
                    request_deserializer=transaction__verification__pb2.EventRequest.FromString,
                    response_serializer=transaction__verification__pb2.EventResponse.SerializeToString,
            ),
            'ClearTransactionCache': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearTransactionCache,
                    request_deserializer=transaction__verification__pb2.ClearCacheRequest.FromString,
                    response_serializer=transaction__verification__pb2.ClearCacheResponse.SerializeToString,
            ),
            'VerifyTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyTransaction,
                    request_deserializer=transaction__verification__pb2.TransactionRequest.FromString,
                    response_serializer=transaction__verification__pb2.TransactionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'transaction.TransactionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TransactionService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def InitializeTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.TransactionService/InitializeTransaction',
            transaction__verification__pb2.InitRequest.SerializeToString,
            transaction__verification__pb2.EventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.TransactionService/VerifyItems',
            transaction__verification__pb2.EventRequest.SerializeToString,
            transaction__verification__pb2.EventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyUserData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.TransactionService/VerifyUserData',
            transaction__verification__pb2.EventRequest.SerializeToString,
            transaction__verification__pb2.EventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyCreditCardFormat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.TransactionService/VerifyCreditCardFormat',
            transaction__verification__pb2.EventRequest.SerializeToString,
            transaction__verification__pb2.EventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearTransactionCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.TransactionService/ClearTransactionCache',
            transaction__verification__pb2.ClearCacheRequest.SerializeToString,
            transaction__verification__pb2.ClearCacheResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.TransactionService/VerifyTransaction',
            transaction__verification__pb2.TransactionRequest.SerializeToString,
            transaction__verification__pb2.TransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
